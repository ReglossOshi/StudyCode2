/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-02-02 03:33:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class adminNoticeInsertForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");

	System.out.println(session.getAttribute("name"));

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("     <link rel=\"stylesheet\" href=\"css/style.css\">\r\n");
      out.write("     <script type=\"text/javascript\" src=\"./js/jquery-3.7.1.min.js\"></script>\r\n");
      out.write("    <title>글쓰기</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"card\">\r\n");
      out.write("        <div class=\"card-header1\">\r\n");
      out.write("            <h1><a href=\"adminNotice.jsp\">스타벅스 공지사항 작성</a></h1>\r\n");
      out.write("        </div>\r\n");
      out.write("        <form action=\"adminNoticeInsert.jsp\" method=\"post\" id=\"form1\" onSubmit=\"return false\" enctype=\"multipart/form-data\">\r\n");
      out.write("        <div class=\"card-write\">\r\n");
      out.write("            <div class=\"myinfo\">\r\n");
      out.write("                이름<input type=\"text\" id=\"korname\" name=\"korname\" placeholder=\"이름을 입력하세요.\">\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"title-w\">\r\n");
      out.write("                제목<input type=\"text\" id=\"title\" name=\"title\" placeholder=\"제목을 입력하세요.\">\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"msg\">\r\n");
      out.write("                내용<textarea  id=\"content\" name=\"content\" placeholder=\"내용을 입력하세요.\"></textarea>\r\n");
      out.write("                1. <input type=\"file\" name=\"filecontent1\" id=\"filecontent1\">\r\n");
      out.write("                <BR>\r\n");
      out.write("                2. <input type=\"file\" name=\"filecontent2\" id=\"filecontent2\">\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"btn-w\"><input type=\"submit\" value=\"작성\" class=\"btn-w\" onclick=\"checkWrite()\"></div>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("    <script>\r\n");
      out.write("    	function checkWrite() {\r\n");
      out.write("    		if(!$('#korname').val()){\r\n");
      out.write("    			alert('이름을 입력하세요.');\r\n");
      out.write("    			$('#korname').focus();\r\n");
      out.write("    			\r\n");
      out.write("    			return;\r\n");
      out.write("    		}\r\n");
      out.write("    		\r\n");
      out.write("    		if($('#korname').val().length>=5){\r\n");
      out.write("    			alert('10자이내로 입력하세요.');\r\n");
      out.write("    			$('#korname').focus();\r\n");
      out.write("    			\r\n");
      out.write("    			return;\r\n");
      out.write("    		}\r\n");
      out.write("    		\r\n");
      out.write("    		if(!$('#title').val()){\r\n");
      out.write("    			alert('제목을 입력하세요.');\r\n");
      out.write("    			$('#title').focus();\r\n");
      out.write("    			\r\n");
      out.write("    			return;\r\n");
      out.write("    		}\r\n");
      out.write("    		if(!$('#content').val()){\r\n");
      out.write("    			alert('내용을 입력하세요.');\r\n");
      out.write("    			$('#content').focus();\r\n");
      out.write("    			\r\n");
      out.write("    			return;\r\n");
      out.write("    		}\r\n");
      out.write("    		document.getElementById('form1').submit();\r\n");
      out.write("		}\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
