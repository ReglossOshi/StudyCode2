/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-03-07 06:16:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.ResultSet;
import java.lang.Exception;
import java.sql.SQLException;

public final class product_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/footer.jsp", Long.valueOf(1709707807062L));
    _jspx_dependants.put("/menu.jsp", Long.valueOf(1709707807070L));
    _jspx_dependants.put("/header.jsp", Long.valueOf(1709707807062L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.SQLException");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.Statement");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("java.sql.DriverManager");
    _jspx_imports_classes.add("java.lang.Exception");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("  <title>제품 관리</title>\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"./css/product_list.css\">\r\n");
      out.write("  <link rel=\"icon\" href=\"./image/favicon.ico\" />\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200\" />\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,600,0,200\" />\r\n");
      out.write("  <script src=\"./js/jquery-3.7.1.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/reset.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/header.css\">\r\n");
      out.write("<link rel=\"icon\" href=\"./image/favicon.ico\" />\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<header>\r\n");
      out.write("		<div class=\"logo\">\r\n");
      out.write("			<a href=\"index.jsp\" class=\"logodiv\">\r\n");
      out.write("				<img src=\"image/icons.png\" alt=\"icon\">\r\n");
      out.write("				<div class=\"logoname\">의류 생산 관리</div>\r\n");
      out.write("			</a>	\r\n");
      out.write("			<div class=\"login\">\r\n");
      out.write("				<button>로그인</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<!-- CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/reset.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/menu.css\">\r\n");
      out.write("<link rel=\"icon\" href=\"./image/favicon.ico\" />\r\n");
      out.write("<!-- 메뉴 아이콘 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200\" />\r\n");
      out.write("<title>의류 생산 관리 시스템</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div id=\"round\">\r\n");
      out.write("		<div id=\"menu\">\r\n");
      out.write("        <input type=\"checkbox\" id=\"menubtn\">\r\n");
      out.write("        <label for=\"menubtn\" id=\"menubtnlabel\"><span class=\"material-symbols-outlined\">menu</span></label>\r\n");
      out.write("        <ul id=\"menuUl\">\r\n");
      out.write("            <li><a href=\"orderList.jsp\" class=\"dir\"><span class=\"material-symbols-outlined dir2\">menu_book</span> 주문 의뢰서</a></li>\r\n");
      out.write("            <li><a href=\"store.jsp\" class=\"dir\"><span class=\"material-symbols-outlined dir2\">inventory_2</span> 입고 등록</a></li>\r\n");
      out.write("            <li><a href=\"inventory.jsp\" class=\"dir\"><span class=\"material-symbols-outlined dir2\">inventory_2</span> 재고 관리</a></li>\r\n");
      out.write("            <li><a href=\"product_list.jsp\" class=\"dir\"><span class=\"material-symbols-outlined dir2\">inventory_2</span> 제품 관리</a></li>\r\n");
      out.write("            <li><a href=\"nike/button.html\" class=\"dir\"><span class=\"material-symbols-outlined dir2\">inventory_2</span> 월별 매출 관리</a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("	</header>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write('\r');
      out.write('\n');

   String searchText = request.getParameter("search");
   if (searchText == null) {
      searchText = "";
   }

      out.write("\r\n");
      out.write("<div class=\"body_header\">\r\n");
      out.write("<!-- 검색창 -->\r\n");
      out.write("  <div class=\"search\">\r\n");
      out.write("  	<div style=\"display: inline-block;\">\r\n");
      out.write("		<input type=\"search\" name=\"search_pro\" id=\"search_pro\" class=\"search_pro\" placeholder=\"제품명을 입력하세요\" value=\"");
      out.print( searchText );
      out.write("\" />\r\n");
      out.write("	</div>\r\n");
      out.write("	<div style=\"display: inline-block;\">\r\n");
      out.write("		<a class=\"search_a\" href=\"javascript: searchText();\">\r\n");
      out.write("			<button class=\"search_button\" type=\"button\">\r\n");
      out.write("				<span class=\"material-symbols-outlined\">search</span>\r\n");
      out.write("			</button>\r\n");
      out.write("		</a>	\r\n");
      out.write("	</div>\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("	<!-- 온체인지 -->\r\n");
      out.write("	<div>\r\n");
      out.write("		 <select id=\"onchange\" name=\"onchange\" class=\"onchange\" onchange=\"changeSelect();\">\r\n");
      out.write("			<option value=\"item_num\" class=\"\">제품번호</option>\r\n");
      out.write("			<option value=\"gender\">성별</option>\r\n");
      out.write("			<option value=\"category\">카테고리</option>\r\n");
      out.write("			<option value=\"item_type\">종류</option>\r\n");
      out.write("			<option value=\"item_name\">제품이름</option>\r\n");
      out.write("			<option value=\"item_size\">사이즈</option>\r\n");
      out.write("			<option value=\"color\">색상</option>\r\n");
      out.write("			<option value=\"price\">가격</option>\r\n");
      out.write("		</select>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("<!-- 제품 추가 -->\r\n");
      out.write("  <div class=\"add_btn\">\r\n");
      out.write("      <a href=\"./product_add_form.jsp\">제품 등록</a>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- 제품 목록 -->\r\n");
      out.write("<div class=\"product_header\">\r\n");
      out.write("	<table>\r\n");
      out.write("		<tr>\r\n");
      out.write("		  <th class=\"rnum\">목차</th>\r\n");
      out.write("		  <th class=\"num\">제품번호</th>\r\n");
      out.write("		  <th class=\"gender\">성별</th>\r\n");
      out.write("		  <th class=\"category\">카테고리</th>\r\n");
      out.write("		  <th class=\"type\">종류</th>\r\n");
      out.write("		  <th class=\"name\">제품이름</th>\r\n");
      out.write("		  <th class=\"size\">사이즈</th>\r\n");
      out.write("		  <th class=\"color\">색상</th>\r\n");
      out.write("		  <th class=\"price\">가격</th>\r\n");
      out.write("		  <th class=\"delete\">삭제</th>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");

    String JDBC_URL = "jdbc:oracle:thin:@1.220.247.78:1522:orcl";
    String USER = "semi_project2";
  	String PASSWORD = "123452";
   
    Connection conn = null; //디비 접속 성공시 접속 정보 저장
    PreparedStatement pstmt = null; //쿼리를 실행하기 객체 정보
    Statement stmt = null;
    ResultSet rs = null;
   
    Exception exception = null;
    Class.forName("oracle.jdbc.driver.OracleDriver");
    
    // 현재 페이지
    int currentPage = (request.getParameter("page") != null) ? Integer.parseInt(request.getParameter("page")) : 1;
    int startPage = 1;	// 시작 페이지
    int countList = 10;	// 한 페이지에 보여질 데이터 수
    int startCount = (currentPage-1) * countList +1;		// 현재 페이지에 따라 가져올 첫번째 게시글
    int endCount = currentPage * countList;					// 현재 페이지에 따라 가져올 마지막 게시글
    int totalCount = 0;	// 총 행 수
    int totalPage = 0;	// 총 페이지 수
    
    try {
      
      // 1. JDBC로 Oracle연결
      conn = DriverManager.getConnection(JDBC_URL, USER, PASSWORD);

      // 행 수 찾기 쿼리
      stmt = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
             ResultSet.CONCUR_UPDATABLE); // 2-2. SQL 쿼리 실행);
      rs = stmt.executeQuery("SELECT * FROM PRODUCTS");
      rs.last();
      totalCount = rs.getRow();	
      rs.beforeFirst();
  	  
      // 총 페이지 수
	  totalPage = totalCount / countList;	
	  if (totalCount % countList > 0) {
	   	  totalPage++;
     }
      // 데이터 가져오기
      pstmt = conn.prepareStatement("SELECT rnum, ITEM_NUM, GENDER, CATEGORY, ITEM_TYPE, ITEM_NAME, ITEM_SIZE, COLOR, PRICE FROM	(SELECT ROWNUM AS rnum, A.* FROM (SELECT * FROM PRODUCTS WHERE ITEM_NAME LIKE '%" + searchText + "%'  ORDER BY ITEM_NUM) A WHERE ROWNUM <= ?) WHERE rnum >= ?"); // 2-2. SQL 쿼리 실행);
      pstmt.setInt(1, endCount);
      pstmt.setInt(2, startCount);
      rs = pstmt.executeQuery();
  
      // 3. rs로 데이터 가져온 걸 웹에 보여주기 -> 쿼리 실행 결과 출력
      while(rs.next()) {

      out.write("\r\n");
      out.write("<!-- 제품 내용 -->\r\n");
      out.write("<div class=\"product_list\" >\r\n");
      out.write("	<table>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td class=\"list_rnum\">");
      out.print( rs.getInt("rnum") );
      out.write("</td>\r\n");
      out.write("			<td class=\"list_num\">");
      out.print( rs.getInt("item_num") );
      out.write("</td>\r\n");
      out.write("			<td class=\"list_gender\">");
      out.print( rs.getString("gender") );
      out.write("</td>\r\n");
      out.write("			<td class=\"list_category\">");
      out.print( rs.getString("category") );
      out.write("</td>\r\n");
      out.write("			<td class=\"list_type\">");
      out.print( rs.getString("item_type") );
      out.write("</td>\r\n");
      out.write("			<td class=\"list_name\">");
      out.print( rs.getString("item_name") );
      out.write("</td>\r\n");
      out.write("			<td class=\"list_size\">");
      out.print( rs.getString("item_size") );
      out.write("</td>\r\n");
      out.write("			<td class=\"list_color\">");
      out.print( rs.getString("color") );
      out.write("</td>\r\n");
      out.write("			<td class=\"list_price\">");
      out.print( rs.getInt("price") );
      out.write("</td>\r\n");
      out.write("			<td class=list_delete><button style=\"cursor: pointer;\" onClick=\"javascript: productDelete(");
      out.print( rs.getInt("item_num") );
      out.write(");\">X</button></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("</div>	  \r\n");
              
      }
  	} catch(Exception e) {
    	System.out.println("오라클 접속 오류:" + e);
  	} finally {
        if (rs != null) try { rs.close(); } catch (SQLException ex) {}
        if (pstmt != null) try { pstmt.close(); } catch (SQLException ex) {}
        if (conn != null) try { conn.close(); } catch (SQLException ex) {}
  	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 페이지네이션 -->\r\n");
      out.write("<div class=\"pagination\">\r\n");
      out.write("   \r\n");
      out.write("    <!-- 처음 버튼 -->\r\n");
      out.write("    <a class=\"startPage\" href=\"./product_list.jsp?page=1&search=");
      out.print( searchText );
      out.write("\" class=\"startPage\">\r\n");
      out.write("		<span class=\"material-symbols-outlined\">keyboard_double_arrow_left</span>\r\n");
      out.write("    </a>\r\n");
      out.write(" \r\n");
      out.write("    <!-- 이전 버튼 -->\r\n");
      out.write("    ");
 if (currentPage > 1) { 
      out.write("\r\n");
      out.write("    	<a href=\"./product_list.jsp?page=");
      out.print( currentPage - 1 );
      out.write("&search=");
      out.print( searchText );
      out.write("\" class=\"beforePage\">\r\n");
      out.write("		    <span class=\"material-symbols-outlined\">arrow_left</span>\r\n");
      out.write("    	</a>\r\n");
      out.write("	");
 } else { 
      out.write("\r\n");
      out.write("    	<button class=\"beforePage\" type=\"button\">\r\n");
      out.write("		    <span class=\"material-symbols-outlined\">arrow_left</span>\r\n");
      out.write("		</button>\r\n");
      out.write("	");
 } 
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<!-- 버튼 목록 -->\r\n");
      out.write("	");
 
		for (int iCount = startPage; iCount <= totalPage; iCount++) {	// 연달아서 페이지 번호 출력 
			if (iCount == currentPage ){
	
      out.write("\r\n");
      out.write("				<a href=\"./product_list.jsp?page=");
      out.print( iCount );
      out.write("&search=");
      out.print( searchText );
      out.write("\" class=\"boldPage\">");
      out.print( " " + iCount );
      out.write("</a>\r\n");
      out.write("	");
		} else {
	
      out.write("		\r\n");
      out.write("				<a href=\"./product_list.jsp?page=");
      out.print( iCount );
      out.write("&search=");
      out.print( searchText );
      out.write("\" class=\"listPage\">");
      out.print( " " + iCount );
      out.write("</a> \r\n");
      out.write("	");
 
				}
		}
  	
      out.write("	 \r\n");
      out.write("  	     \r\n");
      out.write("	<!-- 다음 버튼 -->\r\n");
      out.write("	");
 if (currentPage < totalPage) { 
      out.write("\r\n");
      out.write("	        <a href=\"./product_list.jsp?page=");
      out.print( currentPage + 1 );
      out.write("&search=");
      out.print( searchText );
      out.write("\" class=\"nextpage\">\r\n");
      out.write("		    	<span class=\"material-symbols-outlined\">arrow_right</span>\r\n");
      out.write("			</a>\r\n");
      out.write("	    ");
 } else { 
      out.write("\r\n");
      out.write("		    <button class=\"nextpage\" type=\"button\">\r\n");
      out.write("		    	<span class=\"material-symbols-outlined\">arrow_right</span>\r\n");
      out.write("			</button>\r\n");
      out.write("	    ");
 } 
      out.write("\r\n");
      out.write("   \r\n");
      out.write("   <!-- 마지막 버튼 -->\r\n");
      out.write("   <a href=\"./product_list.jsp?page=");
      out.print( totalPage );
      out.write("&search=");
      out.print( searchText );
      out.write("\" class=\"lastPage\">\r\n");
      out.write("	    <span class=\"material-symbols-outlined\">keyboard_double_arrow_right</span>\r\n");
      out.write("   </a>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("  	function searchText() {\r\n");
      out.write("  		location.href = \"./product_list.jsp?search=\" + $('#search_pro').val();\r\n");
      out.write("  	}\r\n");
      out.write("  	\r\n");
      out.write("	function productDelete(item_num) {\r\n");
      out.write("		if (confirm('정말 삭제하시겠습니까?')) {\r\n");
      out.write("			location.href = \"./product_delete.jsp?item_num=\" + item_num;\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function changeSelect(){\r\n");
      out.write("		//alert('aaa');\r\n");
      out.write("		var select  = document.getElementById(\"onchange\");\r\n");
      out.write("	    var selectValue = select.options[select.selectedIndex].value;   // select element에서 선택된 option의 value가 저장된다.\r\n");
      out.write("	    location.href = \"./product_list_onchange.jsp?onchange=\" + selectValue;  // 페이지의 주소를 material = 선택된데이터(즉 WHERE 원재자명 = selectValue 이런느낌)\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/header.css\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("  <footer>\r\n");
      out.write("  	<div>\r\n");
      out.write("			<div>이용약관 ·운영정책 ·청소년보호정책 ·위치정보이용약관 ·개인정보처리방침 ·웹접근성안내 ·고객센터</div>\r\n");
      out.write("			<div>Copyright &#169; SM Corp. All rights reserved.<span><img src=\"./image/logo.png\" alt=\"logo\"></span></div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
